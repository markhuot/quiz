#!/usr/bin/php
<?php

define('EOL', "\033[0m\r\n");
define('GREEN', "\033[0;32m");
define('BOLDGREEN', "\033[1;32m");
define('RED', "\033[0;31m");
define('BOLDRED', "\033[1;31m");
define('YELLOW', "\033[0;33m");
define('BOLDYELLOW', "\033[1;33m");

class Quiz {
	
}

$verbose = FALSE;
$restrict = array();
if (count($argv) > 2) {
	foreach (array_slice($argv, 1) as $arg) {
		if (substr($arg, 0, 1) == '-') {
			switch ($arg) {
				case '-v':
				case '--verbose':
					$verbose = TRUE;
					break;
			}
		}
		else if (strpos($arg, '::')) {
			list($class, $method) = explode('::', $arg);
			$restrict[$class][] = $method;
		}
	}
}

$tests = array();
$dir = realpath(array_pop($argv)).'/';
if (is_dir($dir)) {
	if ($dh = opendir($dir)) {
		while (($file = readdir($dh)) !== false) {
			if (preg_match('/^(\d*)(.*).php$/', $file, $match)) {
				$class = $match[2];
				require_once $dir.$file;
				$parent_class =  get_parent_class($class);
				if (class_exists($class) && $parent_class == 'Quiz') {
					$tests[] = $match[2];
				}
			}
		}
		closedir($dh);
	}
}

$summary = (object)array('passed' => 0, 'failed' => 0, 'exceptions' => 0);
foreach ($tests as $test) {
	if ($restrict && !isset($restrict[$test])) {
		continue;
	}

	echo BOLDYELLOW.'- '.$test.EOL;

	$testClass = NULL;
	$force_fail = FALSE;

	try {
		$testClass = new $test;
	} catch (Exception $e) {
		$summary->exceptions++;
		echo '    '.YELLOW.'__construct: '.get_class($e).EOL;
		$force_fail = TRUE;
	}

	if (method_exists($testClass, '_setup')) {
		$testClass->_setup();
	}

	$methods = get_class_methods($test);

	foreach ($methods as $method) {

		if ($restrict && !in_array($method, $restrict[$test])) {
			continue;
		}

		if (in_array($method, array('__construct', '_setup'))) {
			continue;
		}

		if ($force_fail) {
			$summary->failed++;
			echo '    '.RED.$method.': NO'.EOL;
			continue;
		}

		try {
			$success = $testClass->{$method}();
			if ($success) {
				$summary->passed++;
				echo '    '.GREEN.$method.': YES'.EOL;
			}
			else {
				$summary->failed++;
				echo '    '.RED.$method.': NO'.EOL;
			}
		} catch (Exception $e) {
			$summary->exceptions++;
			echo '    '.YELLOW.$method.': '.get_class($e).EOL;

			if ($verbose) {
				echo '    - '.preg_replace('/([\r\n])/m', '$1      ', wordwrap($e->getMessage(), 70)).EOL;
			}
		}
	}
}

$color = BOLDGREEN;
if ($summary->failed) {
	$color = BOLDRED;
}
else if ($summary->exceptions) {
	$color = BOLDYELLOW;
}

echo $color."Test Complete: {$summary->passed} passed, {$summary->failed} failed, {$summary->exceptions} exceptions.".EOL;
